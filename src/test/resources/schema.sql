drop table if exists tasks, epics, subtasks;

create type if not exists status as enum ('NEW', 'IN PROGRESS', 'DONE');


create type if not exists task_type as enum ('TASK', 'SUBTASK', 'EPIC');


create table if not exists tasks
(
    task_id     integer generated by default as identity
        primary key,
    name        varchar(50) not null,
    description varchar(500),
    status      status    default 'NEW'::status,
    task_type   task_type default 'TASK'::task_type,
    end_time    timestamp,
    duration    bigint    default '60'::bigint,
    start_time  timestamp   not null
);

create table if not exists epics
(
    epic_id     integer generated by default as identity
        primary key,
    name        varchar(50) not null,
    description varchar(500),
    status      status    default 'NEW'::status,
    task_type   task_type default 'EPIC'::task_type,
    end_time    timestamp,
    duration    bigint    default '60'::bigint,
    start_time  timestamp   not null
);

create table if not exists subtasks
(
    subtask_id  integer generated by default as identity
        primary key,
    name        varchar(50) not null,
    description varchar(500),
    status      status    default 'NEW'::status,
    task_type   task_type default 'SUBTASK'::task_type,
    end_time    timestamp,
    duration    bigint    default '60'::bigint,
    start_time  timestamp   not null,
    epic_id     integer     not null
        constraint subtasks_epic_id_fk
            references epics
            on delete cascade
);
